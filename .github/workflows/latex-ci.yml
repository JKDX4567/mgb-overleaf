name: Build LaTeX PDF

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # keep history for commit count

      - name: Compute version info
        id: ver
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT

      - name: Write version.tex (defines \VERSION)
        run: |
          echo "\\newcommand{\\VERSION}{v${{ steps.ver.outputs.commit_count }}-${{ steps.ver.outputs.short_sha }}}" > version.tex

      # Build with latex-action v3 (containerized TeX Live; Alpine-based image)
      - name: Build PDF (itManual.tex)
        uses: xu-cheng/latex-action@v3
        with:
          root_file: itManual.tex
          work_in_root_file_dir: true
          # pdfLaTeX + minted needs shell-escape:
          args: -pdf -shell-escape -file-line-error -interaction=nonstopmode
          # Alpine package names for Python/Pygments and zip:
          extra_system_packages: >-
            python3
            py3-pip
            py3-pygments
            zip
          # Let CI finish even if LaTeX has non-fatal errors; we'll still upload logs
          continue_on_error: true
          # (Most of these are already in texlive-full; harmless to ensure)
          pre_compile: |
            tlmgr update --self
            tlmgr install \
              amsfonts amsmath \
              minted xcolor hyperref geometry etoolbox \
              pgf listings fancyvrb tcolorbox fvextra catchfile \
              xstring ifplatform grffile upquote \
              titlesec mathtools biblatex csquotes

      # Always show a helpful snippet from the log (even on success)
      - name: Show first LaTeX error (console snippet)
        if: always()
        run: |
          echo "---- Searching for first LaTeX error in itManual.log ----"
          if [ -f itManual.log ]; then
            LINE=$(grep -n -E '^(!|.*LaTeX Error:)' itManual.log | head -1 | cut -d: -f1 || true)
            if [ -n "$LINE" ]; then
              START=$((LINE>20 ? LINE-20 : 1))
              END=$((LINE+40))
              sed -n "${START},${END}p" itManual.log
            else
              echo "No obvious error lines; showing last 200 lines:"
              tail -n 200 itManual.log
            fi
          else
            echo "itManual.log not found."
          fi

      # Always upload logs so we can inspect them
      - name: Upload LaTeX logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: latex-logs
          path: |
            *.log
            *.fls
            *.fdb_latexmk
            *.aux
            **/*.log
            **/*.aux
            itManual.synctex.gz

      # Only collect and zip the PDF if the build actually produced it
      - name: Collect outputs
        if: ${{ success() }}
        run: |
          mkdir -p build
          cp itManual.pdf build/
          ZIPNAME="itManual_v${{ steps.ver.outputs.commit_count }}-${{ steps.ver.outputs.short_sha }}.zip"
          (cd build && zip -r "$ZIPNAME" itManual.pdf)

      - name: Upload PDF artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: pdf-build
          path: build/

      - name: Commit PDF back to repo
        if: ${{ success() }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "CI: add PDF v${{ steps.ver.outputs.commit_count }}-${{ steps.ver.outputs.short_sha }}"
          file_pattern: build/*.pdf build/*.zip
          add_options: '--force'
