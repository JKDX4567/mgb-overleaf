name: Build LaTeX PDF

on:
  push:
    branches: [ main ]
    paths:
      - '**.tex'
      - '**.bib'
      - '**.sty'
      - '**.cls'
      - '**.png'
      - '**.jpg'
      - '**.pdf'
      - '.github/workflows/latex.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write   # needed only if you keep the "Commit PDF" step below

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      # Build the PDF with texlive-full (supports tlmgr and shell-escape)
      - name: Build LaTeX (latexmk via latex-action)
        id: latex
        uses: xu-cheng/latex-action@v3
        with:
          root_file: itManual.tex
          latexmk_shell_escape: true
          work_in_root_file_dir: true
          # Install system packages that minted/pygments and zipping need
          extra_system_packages: >-
            py3-pip
            py3-pygments
            zip
          # Ensure TeX packages you use are present
          pre_compile: |
            tlmgr update --self || true
            tlmgr install \
              minted ifplatform catchfile xstring grffile fvextra upquote \
              tcolorbox titlesec csquotes biblatex listings amsfonts amsmath \
              mathtools txfonts geometry hyperref pgf fancyvrb etoolbox \
              longtable tocloft bookmark || true

      # Show first LaTeX error/warning snippet, but NEVER fail the job
      - name: Show first LaTeX error (console snippet)
        if: always()
        shell: bash
        run: |
          set +e
          echo "---- Searching for first LaTeX error in itManual.log ----"
          if [ -f itManual.log ]; then
            # -a to treat as text even if grep thinks binary
            LINE=$(grep -a -n -E '^(!|.*LaTeX Error:)' itManual.log | head -1 | cut -d: -f1 || true)
            if [ -n "$LINE" ]; then
              START=$((LINE>20 ? LINE-20 : 1))
              END=$((LINE+40))
              sed -n "${START},${END}p" itManual.log
            else
              echo "No obvious error lines; showing last 200 lines:"
              tail -n 200 itManual.log
            fi
          else
            echo "itManual.log not found."
          fi
          exit 0

      - name: List build outputs
        if: always()
        run: ls -lah || true

      # Always upload the PDF artifact so you can download it from the run page
      - name: Upload PDF (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: itManual-pdf
          path: itManual.pdf
          if-no-files-found: warn
          retention-days: 14

      # OPTIONAL: also commit the PDF back to the repo on main
      - name: Commit PDF to repo (main only)
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          set -e
          if [ -f itManual.pdf ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add itManual.pdf version.tex 2>/dev/null || true
            git commit -m "CI: add PDF for ${GITHUB_SHA::7}" || echo "No changes to commit"
            git push || echo "Nothing to push (or no permission)."
          else
            echo "PDF not found; skipping commit step."
          fi
